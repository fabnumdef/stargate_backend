type Query {
    listCampuses(cursor: OffsetCursor, filters: CampusFilters): CampusesList!
    getCampus(id: String!): Campus
}

type Mutation {
    createCampus(id: String!, campus: CampusInput!): Campus!
    editCampus(id: String!, campus: CampusInput!): Campus!
    mutateCampus(id: String!): CampusMutation!
    deleteCampus(id: String!): Campus!
}

# CampusMutation non-extended in units.graphqls

type CampusesList implements OffsetPaginator {
    meta: OffsetPaginatorMeta!
    list: [Campus]!
}

input CampusFilters {
    label: String
}

input CampusInput {
    label: String!
}

type Campus implements Node {
    # Unique id of the campus
    id: String!
    # Date of creation
    createdAt: DateTime!
    # Revision datetime to avoid collisions on edition
    updatedAt: DateTime!
    # Label of the campus
    label: String
}
